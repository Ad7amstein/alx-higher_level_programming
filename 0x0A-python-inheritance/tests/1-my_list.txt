===============================
Tesst for The ``1-my_list`` module
===============================

This module defines a class MyList that ingerits from list class

::

First import ``MyList`` from the ``1-my_list`` module
	>>> MyList = __import__('1-my_list').MyList

Now test it:

::

    >>> n = __import__('1-my_list').__doc__
    >>> len(n) > 1
    True

    >>> n = __import__('1-my_list').MyList.__doc__
    >>> len(n) > 1
    True

    >>> n = __import__('1-my_list').MyList.print_sorted.__doc__
    >>> len(n) > 1
    True

::

    >>> l = MyList()
    >>> print(l)
    []
    >>> l.print_sorted()
    []

::

    >>> l = MyList("adham")
    >>> print(l)
    ['a', 'd', 'h', 'a', 'm']
    >>> l.print_sorted()
    ['a', 'a', 'd', 'h', 'm']

::

    >>> l = MyList()
    >>> l.append(1)
    >>> l.append(2)
    >>> l.append(3)
    >>> l.append(4)
    >>> l.append(5)
    >>> print(l)
    [1, 2, 3, 4, 5]
    >>> l.print_sorted()
    [1, 2, 3, 4, 5]
    >>> print(l)
    [1, 2, 3, 4, 5]

::

    >>> l = MyList()
    >>> l.append(-13)
    >>> l.append(0)
    >>> l.append(-14)
    >>> l.append(20)
    >>> l.append(-132)
    >>> print(l)
    [-13, 0, -14, 20, -132]
    >>> l.print_sorted()
    [-132, -14, -13, 0, 20]
    >>> print(l)
    [-13, 0, -14, 20, -132]

::

    >>> l = MyList()
    >>> l.append(5)
    >>> l.append(4)
    >>> l.append(3)
    >>> l.append(2)
    >>> l.append(1)
    >>> print(l)
    [5, 4, 3, 2, 1]
    >>> l.print_sorted()
    [1, 2, 3, 4, 5]
    >>> print(l)
    [5, 4, 3, 2, 1]

::

    >>> l = MyList()
    >>> l.append(5)
    >>> l.append(3)
    >>> l.extend([4, 2, 1])
    >>> print(l)
    [5, 3, 4, 2, 1]
    >>> l.print_sorted()
    [1, 2, 3, 4, 5]
    >>> print(l)
    [5, 3, 4, 2, 1]

:: 

    >>> l = MyList()
    >>> l.append(NULL)
    Traceback (most recent call last):
    ...
    NameError: name 'NULL' is not defined

:: 

    >>> l = MyList()
    >>> l.append(NaN)
    Traceback (most recent call last):
    ...
    NameError: name 'NaN' is not defined

:: 

    >>> l = MyList()
    >>> l.append(None)
    >>> l.append(1)
    >>> l.append(-3)
    >>> print(l)
    [None, 1, -3]
    >>> l.print_sorted()
    Traceback (most recent call last):
        ...
    TypeError: '<' not supported between instances of 'int' and 'NoneType'
    >>> print(l)
    [None, 1, -3]
