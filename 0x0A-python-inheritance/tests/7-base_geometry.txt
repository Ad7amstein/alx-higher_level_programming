===============================
Tesst for The ``7-base_geometry`` module
===============================

This module defines a class MyList that ingerits list class

::

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now test it:

::

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
    >>> type(bg)
    <class '7-base_geometry.BaseGeometry'>


::

    >>> bg # doctest: +ELLIPSIS
    <7-base_geometry.BaseGeometry object at ...>

::

    >>> n = __import__('7-base_geometry').__doc__
    >>> len(n) > 1
    True

    >>> n = __import__('7-base_geometry').BaseGeometry.__doc__
    >>> len(n) > 1
    True

    >>> n = __import__('7-base_geometry').BaseGeometry.area.__doc__
    >>> len(n) > 1
    True

    >>> n = __import__('7-base_geometry').BaseGeometry.integer_validator.__doc__
    >>> len(n) > 1
    True

::

    >>> bg = BaseGeometry()
    >>> type(bg)
    <class '7-base_geometry.BaseGeometry'>

::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("width", 89)

::

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
        ...
    TypeError: name must be an integer

::

    >>> bg.integer_validator("name", True)
    Traceback (most recent call last):
        ...
    TypeError: name must be an integer

::

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
        ...
    ValueError: age must be greater than 0

::

    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
        ...
    ValueError: distance must be greater than 0

::

    >>> bg.area()
    Traceback (most recent call last):
        ...
    Exception: area() is not implemented

::

    >>> bg.integer_validator("name")
    Traceback (most recent call last):
        ...
    TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

::

    >>> bg.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

::

    >> bg = BaseGeometry("arg")
    Traceback (most recent call last):
        ...
    TypeError: object() takes no parameters

::

    >>> bg.integer_validator({"a": 1}, (1, 2))
    Traceback (most recent call last):
    TypeError: {'a': 1} must be an integer
